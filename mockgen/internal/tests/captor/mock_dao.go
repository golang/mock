// Code generated by MockGen. DO NOT EDIT.
// Source: dao.go

// Package captor is a generated GoMock package.
package captor

import (
	gomock "github.com/golang/mock/gomock"
	models "github.com/golang/mock/mockgen/internal/tests/captor/models"
	reflect "reflect"
)

// MockDao is a mock of Dao interface.
type MockDao struct {
	ctrl     *gomock.Controller
	recorder *MockDaoMockRecorder
}

// MockDaoMockRecorder is the mock recorder for MockDao.
type MockDaoMockRecorder struct {
	mock *MockDao
}

// NewMockDao creates a new mock instance.
func NewMockDao(ctrl *gomock.Controller) *MockDao {
	mock := &MockDao{ctrl: ctrl}
	mock.recorder = &MockDaoMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockDao) EXPECT() *MockDaoMockRecorder {
	return m.recorder
}

// InsertIDs mocks base method.
func (m *MockDao) InsertIDs(ids []int) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "InsertIDs", ids)
}

// InsertIDs indicates an expected call of InsertIDs.
func (mr *MockDaoMockRecorder) InsertIDs(ids interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "InsertIDs", reflect.TypeOf((*MockDao)(nil).InsertIDs), ids)
}

// InsertIDPointer mocks base method.
func (m *MockDao) InsertIDPointer(id *int) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "InsertIDPointer", id)
}

// InsertIDPointer indicates an expected call of InsertIDPointer.
func (mr *MockDaoMockRecorder) InsertIDPointer(id interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "InsertIDPointer", reflect.TypeOf((*MockDao)(nil).InsertIDPointer), id)
}

// InsertCar mocks base method.
func (m *MockDao) InsertCar(car models.Car) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "InsertCar", car)
}

// InsertCar indicates an expected call of InsertCar.
func (mr *MockDaoMockRecorder) InsertCar(car interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "InsertCar", reflect.TypeOf((*MockDao)(nil).InsertCar), car)
}
