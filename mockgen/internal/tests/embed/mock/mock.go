// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/golang/mock/mockgen/internal/tests/embed (interfaces: Hoge)

// Package mock_embed is a generated GoMock package.
package mock_embed

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	embed "github.com/golang/mock/mockgen/internal/tests/embed"
)

// MockHoge is a mock of Hoge interface.
type MockHoge struct {
	embed.Hoge
	ctrl     *gomock.Controller
	recorder *MockHogeMockRecorder
}

// MockHogeMockRecorder is the mock recorder for MockHoge.
type MockHogeMockRecorder struct {
	mock *MockHoge
}

// NewMockHoge creates a new mock instance.
func NewMockHoge(ctrl *gomock.Controller) *MockHoge {
	mock := &MockHoge{ctrl: ctrl}
	mock.recorder = &MockHogeMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockHoge) EXPECT() *MockHogeMockRecorder {
	return m.recorder
}

// Fuga mocks base method.
func (m *MockHoge) Fuga() error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Fuga")
	ret0, _ := ret[0].(error)
	return ret0
}

// Fuga indicates an expected call of Fuga.
func (mr *MockHogeMockRecorder) Fuga() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Fuga", reflect.TypeOf((*MockHoge)(nil).Fuga))
}

// mustImplementedFunction mocks base method.
func (m *MockHoge) mustImplementedFunction() {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "mustImplementedFunction")
}

// mustImplementedFunction indicates an expected call of mustImplementedFunction.
func (mr *MockHogeMockRecorder) mustImplementedFunction() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "mustImplementedFunction", reflect.TypeOf((*MockHoge)(nil).mustImplementedFunction))
}
