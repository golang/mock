// Code generated by MockGen. DO NOT EDIT.
// Source: ./mockgen/internal/tests/parenthesized_parameter_type/input.go

// Package parenthesized_parameter_type is a generated GoMock package.
package parenthesized_parameter_type

import (
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockExample is a mock of Example interface.
type MockExample struct {
	ctrl     *gomock.Controller
	recorder *MockExampleMockRecorder
}

// MockExampleMockRecorder is the mock recorder for MockExample.
type MockExampleMockRecorder struct {
	mock *MockExample
}

// NewMockExample creates a new mock instance.
func NewMockExample(ctrl *gomock.Controller) *MockExample {
	mock := &MockExample{ctrl: ctrl}
	mock.recorder = &MockExampleMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockExample) EXPECT() *MockExampleMockRecorder {
	return m.recorder
}

// ParenthesizedParameterType mocks base method.
func (m *MockExample) ParenthesizedParameterType(param *int) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "ParenthesizedParameterType", param)
}

// ParenthesizedParameterType indicates an expected call of ParenthesizedParameterType.
func (mr *MockExampleMockRecorder) ParenthesizedParameterType(param interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ParenthesizedParameterType", reflect.TypeOf((*MockExample)(nil).ParenthesizedParameterType), param)
}
