// Code generated by MockGen. DO NOT EDIT.
// Source: source.go

// Package source is a generated GoMock package.
package source

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	source "github.com/golang/mock/mockgen/internal/tests/missing_import/source"
)

// MockBar is a mock of Bar interface.
type MockBar struct {
	ctrl     *gomock.Controller
	recorder *MockBarMockRecorder
}

// MockBarMockRecorder is the mock recorder for MockBar.
type MockBarMockRecorder struct {
	mock *MockBar
}

// NewMockBar creates a new mock instance.
func NewMockBar(ctrl *gomock.Controller) *MockBar {
	mock := &MockBar{ctrl: ctrl}
	mock.recorder = &MockBarMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockBar) EXPECT() *MockBarMockRecorder {
	return m.recorder
}

// Baz mocks base method.
func (m *MockBar) Baz(arg0 source.Foo) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "Baz", arg0)
}

// Baz indicates an expected call of Baz.
func (mr *MockBarMockRecorder) Baz(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Baz", reflect.TypeOf((*MockBar)(nil).Baz), arg0)
}
