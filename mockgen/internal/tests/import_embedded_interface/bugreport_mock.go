// Code generated by MockGen. DO NOT EDIT.
// Source: bugreport.go

// Package bugreport is a generated GoMock package.
package bugreport

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	ersatz "github.com/golang/mock/mockgen/internal/tests/import_embedded_interface/ersatz"
	ersatz0 "github.com/golang/mock/mockgen/internal/tests/import_embedded_interface/other/ersatz"
)

// MockSource is a mock of Source interface.
type MockSource struct {
	ctrl     *gomock.Controller
	recorder *MockSourceMockRecorder
}

// MockSourceMockRecorder is the mock recorder for MockSource.
type MockSourceMockRecorder struct {
	mock *MockSource
}

// NewMockSource creates a new mock instance.
func NewMockSource(ctrl *gomock.Controller) *MockSource {
	mock := &MockSource{ctrl: ctrl}
	mock.recorder = &MockSourceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockSource) EXPECT() *MockSourceMockRecorder {
	return m.recorder
}

// Error mocks base method.
func (m *MockSource) Error() string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Error")
	ret0, _ := ret[0].(string)
	return ret0
}

// Error indicates an expected call of Error.
func (mr *MockSourceMockRecorder) Error() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Error", reflect.TypeOf((*MockSource)(nil).Error))
}

// Ersatz mocks base method.
func (m *MockSource) Ersatz() ersatz.Return {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Ersatz")
	ret0, _ := ret[0].(ersatz.Return)
	return ret0
}

// Ersatz indicates an expected call of Ersatz.
func (mr *MockSourceMockRecorder) Ersatz() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Ersatz", reflect.TypeOf((*MockSource)(nil).Ersatz))
}

// OtherErsatz mocks base method.
func (m *MockSource) OtherErsatz() ersatz0.Return {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "OtherErsatz")
	ret0, _ := ret[0].(ersatz0.Return)
	return ret0
}

// OtherErsatz indicates an expected call of OtherErsatz.
func (mr *MockSourceMockRecorder) OtherErsatz() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "OtherErsatz", reflect.TypeOf((*MockSource)(nil).OtherErsatz))
}
